#include "encryption_worker.h"


std::vector<Folder> folder_list;

void init_folder_list() {
	folder_list = std::vector<Folder>();
	std::string config_file(USER_HOME);
	config_file.append(CONFIG_DIRECTORY); 
	if (!dirExists(config_file))
		_mkdir(config_file.c_str());

	config_file.append(CONFIG_FILE);
	if (!file_exists(config_file)) {
		std::ofstream file_stream(config_file);
		file_stream << "# privacy_folder auto-generated file" << std::endl
			<< "# DO NOT edit this file manually" << std::endl;
	}

	std::ifstream file_stream(config_file);
	std::string line;
	while (std::getline(file_stream, line)) {
		if (line.substr(0, 1) == "#") continue;
		process_folder(line);
	}
	file_stream.close();
}

inline void process_folder(const std::string & path) {
	if (dirExists(path)) {
		for (int i = 0; i < folder_list.size() ; i++ ) 
			if (path == folder_list[i].getPath()) return;
		folder_list.push_back(Folder(path));
		return;
	}
	error(std::string(path).append(" does not exist").c_str());
}

void check_loop() {

}

